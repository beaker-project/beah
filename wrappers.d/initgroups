#!/usr/bin/python

import os
import sys
import signal

cmd = 'tortilla get-next-wrapper %s' % os.path.basename(sys.argv[0])
pipe = os.popen(cmd, 'r')
lines = pipe.readlines()
if len(lines) > 0 :
    wrap_next = lines[0].split('\n')[0]
else:
    wrap_next = None
pipe.close()

default_groups = [ os.getegid() ]
groups = os.getgroups()
print sys.argv[0], 'groups: ', groups
if len(groups) == 0:
    print sys.argv[0], 'no groups found, defaulting to', default_groups
    os.setgroups(default_groups)

sys.stdout.flush()

if wrap_next:
    # Reset signal handlers before exec, see Bug 755407
    for i in range(1, signal.NSIG):
        if i in (signal.SIGKILL, signal.SIGSTOP): 
            # These two signals (commonly 9 & 19) can't be caught or ignored
            continue 
        try:
            signal.signal(i, signal.SIG_DFL)
        except:
            pass
    os.execvp(wrap_next, [wrap_next] + sys.argv[1:])
else:
    print sys.argv[0], 'unexpectedly at the end of chain'

